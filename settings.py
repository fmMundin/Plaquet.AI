"""
Django settings for AnalisesPlaquetAi project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o#oan7heyy60f)dt=b%98qt^y($7pp&**jfwywn42@l0n))lx*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['plaquetai.studytask.com.br', '127.0.0.1', 'localhost']

# Confiança no proxy (Caddy) terminando TLS
USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
CSRF_TRUSTED_ORIGINS = ['https://plaquetai.studytask.com.br']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Analises.apps.AnalisesConfig',  # Usar o formato completo
    'accounts.apps.AccountsConfig',
    'axes',  # Proteção brute force
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'axes.middleware.AxesMiddleware',  # Proteção contra brute force
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'accounts.middleware.LoginRequiredMiddleware',  # Novo middleware de autenticação
]

ROOT_URLCONF = 'AnalisesPlaquetAi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],  # Removido o caminho duplicado
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'AnalisesPlaquetAi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
        
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
# Em producao com Caddy, servimos static/media via Caddy apontando para as pastas do projeto
# O collectstatic deve gerar arquivos em /home/mundin/plaquetai/Plaquet.AI/static
STATIC_ROOT = BASE_DIR / 'static'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Nao usar STATICFILES_DIRS em producao; os arquivos serao coletados em STATIC_ROOT

SITE_ID = 1

AUTH_USER_MODEL = 'accounts.CustomUser'

# Authentication settings
LOGIN_URL = 'accounts:login'
LOGIN_REDIRECT_URL = 'Analises:analises'
LOGOUT_REDIRECT_URL = 'accounts:login'

# Django Axes settings (proteção contra brute force)
AXES_FAILURE_LIMIT = 5  # Número de tentativas antes de bloquear
AXES_COOLOFF_TIME = 1  # Tempo de bloqueio em horas
AXES_RESET_ON_SUCCESS = True  # Reseta contagem após login bem sucedido
AXES_LOCKOUT_TEMPLATE = 'accounts/locked.html'  # Template para usuário bloqueado
AXES_LOCKOUT_URL = None  # Usar o template em vez de URL
AXES_USERNAME_FORM_FIELD = 'username'  # Campo de usuário no form (que contém o email)

# Session settings
SESSION_COOKIE_AGE = 1209600  # 2 semanas em segundos
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Sessão persiste mesmo fechando o navegador
SESSION_COOKIE_SECURE = False  # Mudar para True em produção

# Messages settings
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

# Email settings (para recuperação de senha)
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # Para desenvolvimento
DEFAULT_FROM_EMAIL = 'noreply@plaquetai.com'

# Django Axes settings (proteção contra brute force)
AXES_FAILURE_LIMIT = 5  # Número de tentativas antes de bloquear
AXES_COOLOFF_TIME = 1  # Tempo de bloqueio em horas
AXES_RESET_ON_SUCCESS = True  # Reseta contagem após login bem sucedido
AXES_LOCKOUT_TEMPLATE = 'accounts/locked.html'  # Template para usuário bloqueado

# Session settings
SESSION_COOKIE_AGE = 1209600  # 2 semanas em segundos
SESSION_COOKIE_SECURE = False  # Mudar para True em produção
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Sessão persiste mesmo fechando o navegador

# Messages settings
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

# Authentication backends
AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesBackend',  # Should be first
    'django.contrib.auth.backends.ModelBackend',
]

LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/accounts/profile/'
LOGOUT_REDIRECT_URL = '/accounts/login/'

# django-axes
AXES_FAILURE_LIMIT = 5
AXES_COOLOFF_TIME = 1  # em horas
AXES_LOCKOUT_TEMPLATE = 'accounts/lockout.html'

# django-allauth (atualizado para novas opções)
ACCOUNT_LOGIN_METHODS = {'email'}
ACCOUNT_SIGNUP_FIELDS = ['email*', 'password1*', 'password2*']
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_RATE_LIMITS = {
    'login_failed': '5/m',
}
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': ['profile', 'email'],
        'AUTH_PARAMS': {'access_type': 'online'},
    }
}

# E-mail para desenvolvimento
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DEFAULT_FROM_EMAIL = 'noreply@plaquetai.com'

# Para produção, use SMTP do Gmail:
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'seu-email@gmail.com'
# EMAIL_HOST_PASSWORD = 'sua-senha-ou-app-password'

# Cache settings
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
    }
}

# Django Axes settings (proteção contra brute force)
AXES_ENABLED = True
AXES_FAILURE_LIMIT = 5
AXES_COOLOFF_TIME = 1  # em horas
AXES_LOCKOUT_TEMPLATE = 'accounts/locked.html'
AXES_RESET_ON_SUCCESS = True
AXES_USE_USER_AGENT = True
AXES_LOCKOUT_PARAMETERS = ['ip_address', 'username', 'user_agent']
